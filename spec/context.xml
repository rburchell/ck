<?xml version="1.0"?>
<properties xmlns="http://contextkit.freedesktop.org/Provider">
  <doc>
Core Context Properties
=======================

This is the list of the core contextual properties of the Maemo
platform.

This document is maintained as part of the +contextkit+ package.
Please report change requests as bugs against the +contextkit+
package.
 
*NOTE:* Most of these properties are unstable and their definition will
change for some time still.  Only the ones explicitly marked as stable
should be used for now.

  </doc>
  <node name="Context">
   <node name="Screen">
    <doc>
Display screens
---------------

These properties talk about the display screens of the device.
    </doc>
    <key name="TopEdge" type="string-enum">
      <!-- type
	<string-enum>
	  <top/>
	  <bottom/>
	  <left/>
	  <right/>
	</string-enum>
      /type -->
      <doc>
The edge of the main display screen where the user expects
the top-most UI elements to be.  Possible values are the
strings "top", "bottom", "left", and "right", which refer to
the edges of the screen in its normal orientation as defined
by the graphics hardware.  _(stable)_
      </doc>
    </key>
    <key name="IsCovered" type="bool">
      <doc>
Whether or not the main display screen is covered and can thus not be
seen by the user.  This might mean that the device is laying face down
on a table, or that its lid is closed if it has one.  _(stable)_
      </doc>
    </key>
  </node>
  <node name="Location">
    <doc>
Location
--------

Best effort location information. If any of the keys are not
appliciable to the current location, they will be unavailable.
    </doc>
    <key name="Latitude" type="double">
      <doc>The latitude of the current position in degrees.</doc>
    </key>
    <key name="Longitude" type="double">
      <doc>The longitude of the current position in degrees.</doc>
    </key>
    <key name="Altitude" type="double">
      <doc>The altitude of the current position in meters.</doc>
    </key>
    <key name="Street" type="string">
      <doc>The street nearest the location of the device.</doc>
    </key>
    <key name="PostalCode" type="string">
      <doc>The postcode of the location of the device.</doc>
    </key>
    <key name="Area" type="string">
      <doc>The name of the local area where the device is, for example a neighborhood or campus.</doc>
    </key>
    <key name="Locality" type="string">
      <doc>The name of the village, town or city where the device is.</doc>
    </key>
    <key name="Region" type="string">
      <doc>The administrative region which contains the location of the device.</doc>
    </key>
    <key name="Country" type="string">
      <doc>The country which contains the location of the device.</doc>
    </key>
    <key name="CountryCode" type="string">
      <doc>The ISO 3166 two letter country code of the country which contains the location of the device.</doc>
    </key>
    <key name="Timezone" type="string">
      <doc>TBD</doc>
    </key>
    <key name="TimezoneOffset" type="duration">
      <doc>TBD</doc>
    </key>
    <key name="Continent" type="string">
      <doc>The localized name of the current continent, as a string.</doc>
    </key>
    <key name="Planet" type="string">
      <doc>The localized name of the current planet (or dwarf planet), as a string.</doc>
    </key>
    <key name="PointOfInterest" type="string">
      <doc>
The URI of the current point of interest, if any.  (The URI points to a Nepomuk object.)
      </doc>
    </key>
  </node>
  <node name="Battery">
    <doc>
Battery
-------

Information about the batteries of the device.
    </doc>
    <key name="ChargePercentage" type="percentage">
      <doc>
The average charge level of the currently connected batteries. 
Expressed as percentage of the maximum charge level.
      </doc>
    </key>
    <key name="OnBattery" type="bool">
      <doc>
Whether or not the device is currently running on battery power,
i.e., whether at least one of its batteries is currently discharging.
      </doc>
    </key>
    <key name="LowBattery" type="bool">
      <doc>
Whether or not the device is currently running on low battery power.
True if OnBattery is true and the charge levels of all 
batteries are below 10%.
      </doc>
    </key>
    <key name="IsCharging" type="bool">
      <doc>
Whether or not the device is currently charging at least one of its batteries.
      </doc>
    </key>
    <key name="TimeUntilLow" type="INT">
      <doc>
Estimates the time that the device can run on battery before the property 
OnLowBattery becomes true. In seconds.
      </doc>
    </key>
    <key name="TimeUntilFull" type="INT">
      <doc>
Estimates the needed charging time of the device. In seconds.
      </doc>
    </key>
  </node>
  <node name="Connectivity">
    <doc>
Network connectivity
--------------------

Information about the network connectivity of the device.
    </doc>
    <key name="HasInternet" type="bool">
      <doc>
Whether	or not the device is connected to the Internet.
      </doc>
    </key>
    <key name="InternetIsFlatRate" type="bool">
      <doc>
Whether or not traffic to/from the Internet is billed per data volume
(property is false) or per time (property is true).
      </doc>
    </key>
    <key name="InternetNetworkType" type="string-enum">
      <doc>
The type of the current connection to the Internet, such as GPRS,
WLAN, etc.  The possible value are TBD.
      </doc>
    </key>
    <key name="InternetTrafficOut" type="percent">
      <doc>
A rough indication of the current traffic rate to the Internet, in
percent of the maximum possible rate.
      </doc>
    </key>
    <key name="InternetTrafficIn" type="percent">
      <doc>
A rough indication of the current traffic rate from the Internet, in
percent of the maximum possible rate.
      </doc>
    </key>
    <key name="BluetoothEnabled" type="bool">
      <doc>
A boolean indicating whether or not the Bluetooth radio is enabled.
      </doc>
    </key>
    <key name="BluetoothTrafficOut" type="percent">
      <doc>
A rough indication of the current outgoing traffic rate over
Bluetooth, in percent of the maximum possible rate.
      </doc>
    </key>
    <key name="BluetoothTrafficIn" type="percent">
      <doc>
A rough indication of the current incoming traffic rate over
Bluetooth, in percent of the maximum possible rate.
      </doc>
    </key>
    <key name="BluetoothConnected" type="bool">
      <doc>
A boolean indicating whether or not there is a active BlueTooth
connection.  (I don't know much about the BlueTooth connection model,
please help.)
      </doc>
    </key>
    <key name="SignalStrength" type="percentage">
      <doc>
The strength of the radio connection.
      </doc>
    </key>
  </node>
  <node name="Environment">
    <doc>
Environment
-----------

Information about the environment the device is in.
    </doc>
    <key name="IsDark" type="bool">
      <doc>
Whether or not it is dark.
      </doc>
    </key>
    <key name="SunRise" type="time">
      <doc>
The time of sun rise.
      </doc>
    </key>
    <key name="SunSet" type="time">
      <doc>
The time of sun set.
      </doc>
    </key>
    <key name="Weather" type="map">
      <!-- type
	<map>
	  <allowed-keys>
	    <Condition type="string">
	      <doc>
The current weather condition, as a localized, human readable string.
Examples are "Cloudy", "Raining", etc.
	      </doc>
	    </Condition>
	    <ConditionCode>
	      <type>
		<string-enum>
		  <cloudy/>
		  ...
		</string-enum>
	      </type>
	      <doc>
The current weather condition, as a symbolic string.  The set of
symbols is to be defined, but it will be fixed and quite small so that
you can provide an icon for each of them, etc.
	      </doc>
	    </ConditionCode>
	    ...
	  </allowed-keys>
	</map>
      /type -->
      <doc>
The current weather.  See http://www.ominous-valve.com/wx_codes.txt for
more information about codifying weather conditions.  We should lift
something from there, if just for extra geek points.
+
The value of the weather property is a dictionary with the following
keys.  All keys are optional and additional keys might be present.
+
- *Condition*
+
The current weather condition, as a localized, human readable string.
Examples are "Cloudy", "Raining", etc.
+
- *ConditionCode*
+
The current weather condition, as a symbolic string.  The set of
symbols is to be defined, but it will be fixed and quite small so that
you can provide an icon for each of them, etc.
+
- *Humidity*
+
The relative humidity in percent.
+
- *Temperature*
+
The temperature as a localized string.  This string represents the
temperature in the way preferred by the user.  Most often this means
either degrees Celsius or degrees Fahrenheit, but it could be some
other unit entirely.
+
- *TemperatureK*
+
The temperature in Kelvin.
+
- *ApparentTemperature*
+
The felt temperature as a localized string, analogous to Temperature.
+
- *ApparentTemperatureK*
+
The felt temperature in Kelvin.
+
- *DewPoint*
+
The dew point as a localized string, analogous to Temperature.
+
- *DewPointK*
+
The dew point in Kelvin.
+
- *Pressure*
+
The atmospheric pressure in milli bar.
+
- *Precipitation*
+
The rain or snow fall in millimeter per square meter per hour (or some
other more common unit).
+
- *Visibility*
+
The visibility in meter.
+
- *WindSpeed*
+
The wind speed in meters per second.
+
- *WindDirection*
+
The wind direction as a localized string.  The direction is given in
compass terms: North, South-West, etc.
+
- *WindDirectionD*
+
The wind direction in degrees.  North is 0, east is 90, etc.
      </doc>
    </key>
    <key name="NearbyContacts" type="string-list">
      <doc>
A list of URIs for contacts that are physically nearby.  (The URIs
point to Nepomuk objects.)
      </doc>
    </key>    
    <key name="ConnectedContacts" type="string-list">
      <doc>
A list of URIs for contacts that the user is currently engaged in
conversations with.  (The URIs point to Nepomuk objects.)
      </doc>
    </key>    
  </node>
  <node name="State">
    <doc>
State
-----

Information about the global state of the device.
    </doc>
    <key name="Situation" type="string">
      <doc>
The symbolic name of the current "Situation".  (Situations are a UI
concept similar to Profiles that allows the user to have different
customizations for his/her device and automatically/explcicitly switch
between them.  Typical Situations are "AtHome", "AtWork", "InMeeting"
etc.  Some of them are probably pre-defined, others can be defined by
the user.  Situations might form a hierarchy: InMeeting includes
AtWork.  Have to investigate this, obviously.)
      </doc>
    </key>
  </node>
 </node>
</properties>
